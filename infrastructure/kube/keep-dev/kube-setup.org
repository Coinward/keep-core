* Intro

This document details the steps for boostrapping the GKE cluster
applications in the =keep-dev= project.  While we continue to
hand configure the environment this document will serve as 
command reference and maintenance record.


* First time with this environment

- You need to be a member of the project =keep-dev-fe24=.

- You need to configure =gcloud= for the project
  - Select option 2
  - Configure project =keep-dev-fe24=
  - default zone us-central1-a

#+BEGIN_EXAMPLE
gcloud init
#+END_EXAMPLE

- Download =kubectl= config for GKE cluster

#+BEGIN_SRC sh :results silent
gcloud beta container clusters get-credentials keep-dev --region us-central1
#+END_SRC


* Working with this environment

- Set your =gcloud= context.  You can run =gcloud init= again and
  choose your saved =keep-dev= profile.

- Set your =kubectl= context.

#+BEGIN_SRC sh :results silent
kubectl config get-contexts \
  | grep keep-dev \
  | awk '{print $2}' \
  | xargs kubectl config use-context
#+END_SRC


* Cluster-wide configurations

** Secrets
*** DONE Terraform env vars
**** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic terraform-env-vars \
  --from-file=./secrets/terraform-env-vars/billing-account \
  --from-file=./secrets/terraform-env-vars/org-id
#+END_SRC

#+RESULTS:
: Mon Dec 17 20:07:34 UTC 2018
: sthompson22
: secret/terraform-env-vars created

*** DONE Terraform service account

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic terraform-admin-service-account \
  --from-file=$HOME/.config/gcloud/thesis-terraform-admin-service-account-creds.json
#+END_SRC

#+RESULTS:
: Mon Dec 17 20:07:04 UTC 2018
: sthompson22
: secret/terraform-admin-service-account created


* Application configurations

** DONE Atlantis

Atlantis is our tool for running terraform =plan= and =apply= runs in
prs.
|--------------+-----------------------------|
|              | <l>                         |
| Image        | runatlantis/atlantis:latest |
| Service Type | NodePort                    |
| Node Port    | 30885                       |
| Service Port | 8443                        |
| Ingress Type | GCE                         |
| Ingress Port | 443                         |


*** DONE Stateful set
**** DONE Describe

#+BEGIN_SRC sh :results drawer
date -u
whoami

kubectl describe \
  statefulset/atlantis
#+END_SRC

#+RESULTS:
:RESULTS:
Mon Dec 17 21:05:16 UTC 2018
sthompson22
Name:               atlantis
Namespace:          default
CreationTimestamp:  Mon, 17 Dec 2018 15:54:08 -0500
Selector:           app=atlantis
Labels:             <none>
Annotations:        <none>
Replicas:           1 desired | 1 total
Update Strategy:    RollingUpdate
Pods Status:        1 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=atlantis
  Containers:
   atlantis:
    Image:      runatlantis/atlantis:latest
    Port:       8443/TCP
    Host Port:  0/TCP
    Limits:
      cpu:     100m
      memory:  256Mi
    Requests:
      cpu:      100m
      memory:   256Mi
    Liveness:   http-get https://:8443/healthz delay=0s timeout=1s period=60s #success=1 #failure=3
    Readiness:  http-get https://:8443/healthz delay=0s timeout=1s period=60s #success=1 #failure=3
    Environment:
      GOOGLE_APPLICATION_CREDENTIALS:     /mnt/terraform-admin-service-account/thesis-terraform-admin-service-account-creds.json
      ATLANTIS_ALLOW_REPO_CONFIG:         true
      ATLANTIS_ATLANTIS_URL:              https://atlantis.keep-dev.com
      ATLANTIS_SSL_CERT_FILE:             /atlantis/tls/tls.crt
      ATLANTIS_SSL_KEY_FILE:              /atlantis/tls/tls.key
      ATLANTIS_REPO_WHITELIST:            github.com/keep-network/keep-core
      ATLANTIS_GH_USER:                   thesis-heimdall
      ATLANTIS_GH_TOKEN:                  <set to the key 'gh-access-token' in secret 'atlantis-git'>    Optional: false
      ATLANTIS_GH_WEBHOOK_SECRET:         <set to the key 'gh-webhook-secret' in secret 'atlantis-git'>  Optional: false
      ATLANTIS_DATA_DIR:                  /atlantis
      ATLANTIS_PORT:                      8443
      TF_VAR_gcp_thesis_org_id:           <set to the key 'org-id' in secret 'terraform-env-vars'>           Optional: false
      TF_VAR_gcp_thesis_billing_account:  <set to the key 'billing-account' in secret 'terraform-env-vars'>  Optional: false
    Mounts:
      /atlantis from atlantis-data (rw)
      /atlantis/tls from atlantis-tls-files (rw)
      /mnt/terraform-admin-service-account from terraform-admin-service-account (rw)
  Volumes:
   atlantis-tls-files:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  atlantis-tls
    Optional:    false
   terraform-admin-service-account:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  terraform-admin-service-account
    Optional:    false
Volume Claims:
  Name:          atlantis-data
  StorageClass:  
  Labels:        <none>
  Annotations:   <none>
  Capacity:      1Gi
  Access Modes:  [ReadWriteOnce]
Events:
  Type    Reason            Age   From                    Message
  ----    ------            ----  ----                    -------
  Normal  SuccessfulCreate  11m   statefulset-controller  create Pod atlantis-0 in StatefulSet atlantis successful
:END:

**** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create \
  -f ./atlantis-statefulset.yaml
#+END_SRC

#+RESULTS:
: Fri Nov  2 15:11:58 UTC 2018
: sthompson22
: statefulset.apps/atlantis created

**** DONE Update

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl apply \
  -f ./atlantis-statefulset.yaml
#+END_SRC

#+RESULTS:
: Fri Nov  2 21:01:47 UTC 2018
: sthompson22
: statefulset.apps/atlantis configured

**** TODO Delete

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl delete \
  statefulset/<insert-name>
#+END_SRC
*** DONE Service
**** DONE Describe

#+BEGIN_SRC sh :results drawer
date -u
whoami

kubectl describe \
  service/atlantis-https
#+END_SRC

#+RESULTS:
:RESULTS:
Mon Dec 17 21:05:26 UTC 2018
sthompson22
Name:                     atlantis-https
Namespace:                default
Labels:                   <none>
Annotations:              service.alpha.kubernetes.io/app-protocols: {"atlantis-https-port":"HTTPS"}
Selector:                 app=atlantis
Type:                     NodePort
IP:                       10.102.100.120
Port:                     atlantis-https-port  8443/TCP
TargetPort:               8443/TCP
NodePort:                 atlantis-https-port  30885/TCP
Endpoints:                10.102.1.14:8443
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
:END:

**** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create \
  -f ./atlantis-service-https.yaml
#+END_SRC

#+RESULTS:
: Fri Nov  2 15:13:31 UTC 2018
: sthompson22
: service/atlantis-https created

**** TODO Update

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl apply \
  -f ./atlantis-service-https.yaml
#+END_SRC
**** TODO Delete

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl delete \
  service/<insert service name>
#+END_SRC
*** DONE Ingress
**** DONE Describe

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl describe \
  ingress/atlantis-https
#+END_SRC

#+RESULTS:

**** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create \
  -f ./atlantis-ingress-https.yaml
#+END_SRC

#+RESULTS:
: Fri Nov  2 15:52:01 UTC 2018
: sthompson22
: ingress.extensions/atlantis-https created

**** DONE Update

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl apply \
  -f ./atlantis-ingress-https.yaml
#+END_SRC

#+RESULTS:
: Tue Jan 15 14:50:25 UTC 2019
: sthompson22
: ingress.extensions/atlantis-https configured

**** TODO Delete

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl delete \
  ingress/atlantis-https
#+END_SRC
*** DONE Secrets
**** DONE atlantis-git
***** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic atlantis-git \
  --from-file=./secrets/atlantis/gh-webhook-secret \
  --from-file=./secrets/atlantis/gh-access-token
#+END_SRC

#+RESULTS:
: Mon Dec 17 20:12:37 UTC 2018
: sthompson22
: secret/atlantis-git created
***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic atlantis-git \
  --from-file=./secrets/atlantis/gh-webhook-secret \
  --from-file=./secrets/atlantis/gh-access-token \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Fri Jan 11 21:12:12 UTC 2019
: sthompson22
: secret/atlantis-git configured

**** DONE atlantis-gitconfig
***** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic atlantis-gitconfig \
  --from-file=./secrets/atlantis/.gitconfig
#+END_SRC

#+RESULTS:
: Fri Jan 11 21:19:50 UTC 2019
: sthompson22
: secret/atlantis-gitconfig created

**** DONE atlantis-tls
***** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret tls atlantis-tls \
  --cert=./secrets/atlantis/atlantis.keep-dev.crt \
  --key=./secrets/atlantis/atlantis.keep-dev.key
#+END_SRC     

#+RESULTS:
: Mon Dec 17 20:17:47 UTC 2018
: sthompson22
: secret/atlantis-tls created
** DONE Keep-client
*** DONE ConfigMaps

**** DONE keep-client-bootstrap-peer-0
***** DONE Create
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-bootstrap-peer-0 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-18.634754200Z--a86c468475ef9c2ce851ea4125424672c3f7e0c8 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-bootstrap-peer-0.toml
#+END_SRC 

#+RESULTS:
: Fri Mar 29 19:27:10 UTC 2019
: sthompson22
: configmap/keep-client-bootstrap-peer-0 created

***** DONE Describe
#+BEGIN_SRC sh :results pp
date -u
whoami 

kubectl describe configmaps keep-client-bootstrap-peer-0
#+END_SRC

#+RESULTS:
#+begin_example
Thu Apr 18 13:06:27 UTC 2019
sthompson22
Name:         keep-client-bootstrap-peer-0
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"eth-keyfile":"{\"address\":\"a86c468475ef9c2ce851ea4125424672c3f7e0c8\",\"crypto\":{\"cipher\":\"aes-128-ctr\"...

Data
====
eth-keyfile:
----
{"address":"a86c468475ef9c2ce851ea4125424672c3f7e0c8","crypto":{"cipher":"aes-128-ctr","ciphertext":"baf1a41ab1eb0d6c4319c25940109e719e9235c02caf0774b5691278b4e4dcb7","cipherparams":{"iv":"06ec697e60caca62446c71faab85e900"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"e5ed267ee9848b55456c3201e4e3cfc157bbeaa2dbdd5340152dd1c4cce60eb6"},"mac":"c7a6ce54a99709150c243cb0db00de4642e0be1b878970bcbe68901036912d2c"},"id":"51b57d3d-3ae4-41f1-9e37-1eefa5e82080","version":3}
keep-client-config.toml:
----
# This is a TOML configuration file for DKG, P2P networking and connection to Ethereum

# Provider Initialization Example

[ethereum]
  URL                = "ws://eth-tx-node.default.svc.cluster.local:8546"
  URLRPC             = "http://eth-tx-node.default.svc.cluster.local:8545"

[ethereum.account]
  Address            = "0xA86c468475EF9C2ce851Ea4125424672C3F7e0C8"
  KeyFile            = "/mnt/eth-data/eth-keyfile"

[ethereum.ContractAddresses]
  # Hex-encoded address of KeepRandomBeacon contract
  KeepRandomBeacon = "0xE1c288e70d423aa836BE11e67518f10351CA2443"
  # Hex-encoded address of KeepGroup contract
  KeepGroup = "0xeB3FDD023f3108ceF2dEcFe993293EbdcDc6Dc0E"
  # StakingProxy
  Staking = "0x92dca2E0eDf1C50a7548D05bF7eE4735F658b467"

# Bootstrap node creating a new network.
  [LibP2P]
   Seed = 2
   Port = 3919

Events:  <none>
#+end_example

***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-bootstrap-peer-0 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-18.634754200Z--a86c468475ef9c2ce851ea4125424672c3f7e0c8 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-bootstrap-peer-0.toml \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Wed Apr 17 14:55:06 UTC 2019
: sthompson22
: configmap/keep-client-bootstrap-peer-0 configured

***** Delete
**** DONE keep-client-standard-peer-0
***** DONE Create
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-0 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-20.019269100Z--c82c480e82ee76ae607a3446cac22314fabdd19e \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-0.toml
#+END_SRC 

#+RESULTS:
: Sun Mar 31 17:54:38 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-0 created

***** DONE Describe
#+BEGIN_SRC sh :results pp
date -u
whoami 

kubectl describe configmaps keep-client-standard-peer-0
#+END_SRC

#+RESULTS:
#+begin_example
Thu Apr 18 13:06:48 UTC 2019
sthompson22
Name:         keep-client-standard-peer-0
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"eth-keyfile":"{\"address\":\"c82c480e82ee76ae607a3446cac22314fabdd19e\",\"crypto\":{\"cipher\":\"aes-128-ctr\"...

Data
====
eth-keyfile:
----
{"address":"c82c480e82ee76ae607a3446cac22314fabdd19e","crypto":{"cipher":"aes-128-ctr","ciphertext":"60eeffc3c18931736549ad1cdfce1957085c55d161424078a5b406334d7eaed0","cipherparams":{"iv":"6cd221e0818834143566e5867ac02944"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"6ec4d2c09c2661c387e8726cb77ab1639d6a6801154b6149f5896a38242f7a28"},"mac":"f52bba394e90558fe9f8756085aba2566a05c7bcc8081420a39870094b2f9b7e"},"id":"e23cdf8b-70e3-466f-8f19-75ba45b9ebf1","version":3}
keep-client-config.toml:
----
# This is a TOML configuration file for DKG, P2P networking and connection to Ethereum

# Provider Initialization Example

[ethereum]
  URL                = "ws://eth-tx-node.default.svc.cluster.local:8546"
  URLRPC             = "http://eth-tx-node.default.svc.cluster.local:8545"

[ethereum.account]
  Address            = "0xc82C480E82Ee76Ae607a3446CAc22314FaBdD19e"
  KeyFile            = "/mnt/eth-data/eth-keyfile"

[ethereum.ContractAddresses]
  # Hex-encoded address of KeepRandomBeacon contract
  KeepRandomBeacon = "0xE1c288e70d423aa836BE11e67518f10351CA2443"
  # Hex-encoded address of KeepGroup contract
  KeepGroup = "0xeB3FDD023f3108ceF2dEcFe993293EbdcDc6Dc0E"
  # StakingProxy
  Staking = "0x92dca2E0eDf1C50a7548D05bF7eE4735F658b467"

[LibP2P]
  Peers = ["/ip4/10.102.100.142/tcp/3919/ipfs/16Uiu2HAm9RGTm8VGne5PvZGAw9KYNDggHaEQh5wiGSKgibp2G95r"]
  Port = 3923

Events:  <none>
#+end_example

***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-0 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-20.019269100Z--c82c480e82ee76ae607a3446cac22314fabdd19e \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-0.toml \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Wed Apr 17 14:55:30 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-0 configured

***** Delete
**** DONE keep-client-standard-peer-1
***** DONE Create
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-1 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-21.389836600Z--c1382caf9da1b1eda32b570a9f6c81c4db067020 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-1.toml
#+END_SRC 

#+RESULTS:
: Sun Mar 31 18:03:52 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-1 created

***** DONE Describe
#+BEGIN_SRC sh :results pp
date -u
whoami 

kubectl describe configmaps keep-client-standard-peer-1
#+END_SRC

#+RESULTS:
#+begin_example
Thu Apr 18 13:06:57 UTC 2019
sthompson22
Name:         keep-client-standard-peer-1
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"eth-keyfile":"{\"address\":\"c1382caf9da1b1eda32b570a9f6c81c4db067020\",\"crypto\":{\"cipher\":\"aes-128-ctr\"...

Data
====
eth-keyfile:
----
{"address":"c1382caf9da1b1eda32b570a9f6c81c4db067020","crypto":{"cipher":"aes-128-ctr","ciphertext":"605344ffc6493b532900d9b411dbba2aa4f2763cce3428f5ef5b7cc9e9e64b45","cipherparams":{"iv":"fe8c772ad604c170ad9625449747f155"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"64589115866a96366bfb8ae5aa415a6305dcdb2c1546be8f760fe889c1914639"},"mac":"7f87bb9f7074acc4f48b3c7fbe5b1122f767188c60f464bd99b616dfe9efa7a5"},"id":"ea8153a0-88c8-4e5b-93d4-1b9f6750ec2e","version":3}
keep-client-config.toml:
----
# This is a TOML configuration file for DKG, P2P networking and connection to Ethereum

# Provider Initialization Example

[ethereum]
  URL                = "ws://eth-tx-node.default.svc.cluster.local:8546"
  URLRPC             = "http://eth-tx-node.default.svc.cluster.local:8545"

[ethereum.account]
  Address            = "0xC1382cAf9DA1B1EdA32b570A9F6C81C4DB067020"
  KeyFile            = "/mnt/eth-data/eth-keyfile"

[ethereum.ContractAddresses]
  # Hex-encoded address of KeepRandomBeacon contract
  KeepRandomBeacon = "0xE1c288e70d423aa836BE11e67518f10351CA2443"
  # Hex-encoded address of KeepGroup contract
  KeepGroup = "0xeB3FDD023f3108ceF2dEcFe993293EbdcDc6Dc0E"
  # StakingProxy
  Staking = "0x92dca2E0eDf1C50a7548D05bF7eE4735F658b467"

[LibP2P]
  Peers = ["/ip4/10.102.100.142/tcp/3919/ipfs/16Uiu2HAm9RGTm8VGne5PvZGAw9KYNDggHaEQh5wiGSKgibp2G95r"]
  Port = 3925

Events:  <none>
#+end_example

***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-1 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-21.389836600Z--c1382caf9da1b1eda32b570a9f6c81c4db067020 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-1.toml \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Wed Apr 17 14:55:48 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-1 configured

***** Delete
**** DONE keep-client-standard-peer-2
***** DONE Create
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-2 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-22.755015200Z--6226b7c97fdec78776e2898671541cc55387e743 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-2.toml
#+END_SRC 

#+RESULTS:
: Sun Mar 31 18:14:45 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-2 created

***** DONE Describe
#+BEGIN_SRC sh :results pp
date -u
whoami 

kubectl describe configmaps keep-client-standard-peer-2
#+END_SRC

#+RESULTS:
#+begin_example
Thu Apr 18 13:07:15 UTC 2019
sthompson22
Name:         keep-client-standard-peer-2
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"eth-keyfile":"{\"address\":\"6226b7c97fdec78776e2898671541cc55387e743\",\"crypto\":{\"cipher\":\"aes-128-ctr\"...

Data
====
eth-keyfile:
----
{"address":"6226b7c97fdec78776e2898671541cc55387e743","crypto":{"cipher":"aes-128-ctr","ciphertext":"961adefec3cf77b7d5d55d4bbf9cbf37525dfa18e99fec3eddb4161ae730abce","cipherparams":{"iv":"755a76af6fc8a85aa36ea91efca7da6f"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"a0d6d34cbf6efb6aa88d2967a0d7722fc2b9c417ff99b3cd1a173caa38e9f60f"},"mac":"99ef3c40aaea5c149430bda3fa64e4e22b804e1aebf13674909d849c3d43cfa4"},"id":"49f348aa-23fd-4925-a240-a60c983d0296","version":3}
keep-client-config.toml:
----
# This is a TOML configuration file for DKG, P2P networking and connection to Ethereum

# Provider Initialization Example

[ethereum]
  URL                = "ws://eth-tx-node.default.svc.cluster.local:8546"
  URLRPC             = "http://eth-tx-node.default.svc.cluster.local:8545"

[ethereum.account]
  Address            = "0x6226B7C97FDeC78776E2898671541cc55387E743"
  KeyFile            = "/mnt/eth-data/eth-keyfile"

[ethereum.ContractAddresses]
  # Hex-encoded address of KeepRandomBeacon contract
  KeepRandomBeacon = "0xE1c288e70d423aa836BE11e67518f10351CA2443"
  # Hex-encoded address of KeepGroup contract
  KeepGroup = "0xeB3FDD023f3108ceF2dEcFe993293EbdcDc6Dc0E"
  # StakingProxy
  Staking = "0x92dca2E0eDf1C50a7548D05bF7eE4735F658b467"

[LibP2P]
  Peers = ["/ip4/10.102.100.142/tcp/3919/ipfs/16Uiu2HAm9RGTm8VGne5PvZGAw9KYNDggHaEQh5wiGSKgibp2G95r"]
  Port = 3922
Events:  <none>
#+end_example

***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-2 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-22.755015200Z--6226b7c97fdec78776e2898671541cc55387e743 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-2.toml \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Wed Apr 17 14:56:05 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-2 configured

***** Delete
**** DONE keep-client-standard-peer-3
***** DONE Create
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-3 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-24.156246300Z--717d11e8f02c1dc1022327499ef50b45b39d01a4 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-3.toml
#+END_SRC 

#+RESULTS:
: Sun Mar 31 18:17:35 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-3 created

***** DONE Describe
#+BEGIN_SRC sh :results pp
date -u
whoami 

kubectl describe configmaps keep-client-standard-peer-3
#+END_SRC

#+RESULTS:
#+begin_example
Thu Apr 18 13:07:28 UTC 2019
sthompson22
Name:         keep-client-standard-peer-3
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"eth-keyfile":"{\"address\":\"717d11e8f02c1dc1022327499ef50b45b39d01a4\",\"crypto\":{\"cipher\":\"aes-128-ctr\"...

Data
====
eth-keyfile:
----
{"address":"717d11e8f02c1dc1022327499ef50b45b39d01a4","crypto":{"cipher":"aes-128-ctr","ciphertext":"ad8b3c57bb91a740e368c7a94256fec3ac4114f39b4841346377658f0bcd68a0","cipherparams":{"iv":"f7284c3ab1e54c27e4d0bcf76af07b40"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"85fcc46df6ffc279dfc52008ee856ab659d80151f7530bfa754d3a256b33eb14"},"mac":"fc468425da42307fad8b57b5827ef9ab5d82d28fdf1d31e76c888ce7e1525d17"},"id":"4a654dbb-31cb-4707-8628-9ee97aa56624","version":3}
keep-client-config.toml:
----
# This is a TOML configuration file for DKG, P2P networking and connection to Ethereum

# Provider Initialization Example

[ethereum]
  URL                = "ws://eth-tx-node.default.svc.cluster.local:8546"
  URLRPC             = "http://eth-tx-node.default.svc.cluster.local:8545"

[ethereum.account]
  Address            = "0x717D11e8f02C1dC1022327499EF50B45b39D01a4"
  KeyFile            = "/mnt/eth-data/eth-keyfile"

[ethereum.ContractAddresses]
  # Hex-encoded address of KeepRandomBeacon contract
  KeepRandomBeacon = "0xE1c288e70d423aa836BE11e67518f10351CA2443"
  # Hex-encoded address of KeepGroup contract
  KeepGroup = "0xeB3FDD023f3108ceF2dEcFe993293EbdcDc6Dc0E"
  # StakingProxy
  Staking = "0x92dca2E0eDf1C50a7548D05bF7eE4735F658b467"

[LibP2P]
  Peers = ["/ip4/10.102.100.142/tcp/3919/ipfs/16Uiu2HAm9RGTm8VGne5PvZGAw9KYNDggHaEQh5wiGSKgibp2G95r"]
  Port = 3924

Events:  <none>
#+end_example

***** DONE Update
#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create configmap keep-client-standard-peer-3 \
  --from-file=eth-keyfile=./keep-client/keyfiles/UTC--2019-03-27T19-05-24.156246300Z--717d11e8f02c1dc1022327499ef50b45b39d01a4 \
  --from-file=keep-client-config.toml=./keep-client/config/keep-client-standard-peer-3.toml \
  --dry-run \
  --save-config \
  -o yaml | kubectl apply -f -
#+END_SRC

#+RESULTS:
: Wed Apr 17 14:56:29 UTC 2019
: sthompson22
: configmap/keep-client-standard-peer-3 configured

***** Delete
*** DONE Secrets
**** DONE eth-keyfile-passphrase
***** DONE Create

#+BEGIN_SRC sh :results pp
date -u
whoami

kubectl create secret generic eth-account-passphrase \
  --from-file=./secrets/eth/account-passphrase \
#+END_SRC

#+RESULTS:
: Fri Mar 15 16:42:02 UTC 2019
: sthompson22
: secret/eth-account-passphrase created

